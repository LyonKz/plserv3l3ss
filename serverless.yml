# NOTE: update this with your service name
service: my-project

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: us-east-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.

  environment:
    tableName: test

  iamRoleStatements:    
    - Effect: Allow      
      Action:        
        - dynamodb:DescribeTable       
        - dynamodb:Query        
        - dynamodb:Scan        
        - dynamodb:GetItem
        - dynamodb:PutItem        
        - dynamodb:UpdateItem        
        - dynamodb:DeleteItem      
      Resource: "arn:aws:dynamodb:us-east-2:*:*"

# Create our resources with seperate CloudFormation templates
resources:
  #API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}

# Defines an HTTP API endpoint that calls the main function in create.js  
# - path: url path is /notes  
# - method: POST request  
# - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross domain api call  
# - authorizer: authenticate using the AWS IAM role    
functions:
  get:
    handler: get.main
    events:
      - http:
          path: test/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    handler: list.main
    events:
      - http:
          path: test
          method: get
          cors: true
          authorizer: aws_iam
